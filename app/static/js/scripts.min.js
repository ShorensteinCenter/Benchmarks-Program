const slideLeft=()=>{const e=document.querySelectorAll(".container-fluid"),t=e[0].style.transform,o=null==t?-100:+t.replace(/[^-?\d.]/g,"")-100;for(let t=0;t<e.length;++t)e[t].style.transform="translateX("+o+"vw)"},checkbox=document.querySelector(".checkmark");agreeToTermsEvt=(e=>{checkbox.removeEventListener("transitionend",agreeToTermsEvt),slideLeft(),document.querySelector("nav").classList.add("nav-visible")}),agreeToTerms=(e=>{checkbox.removeEventListener("click",agreeToTerms),checkbox.addEventListener("transitionend",agreeToTermsEvt)}),checkbox.addEventListener("click",agreeToTerms);const apiForm=document.querySelector(".api-key-form"),csrfToken=document.querySelector("meta[name=csrf-token]").content,submitApiKey=async e=>{if(e.preventDefault(),toggleForm(!0,apiForm,submitApiKey),apiKeyClientSideValidation()){const e=new Headers({"X-CSRFToken":csrfToken}),t=new FormData(apiForm),o=new Request("/validateAPIKey",{method:"POST",credentials:"same-origin",headers:e,body:t});try{const e=await fetch(o);if(!e.ok)throw new Error(e.statusText);showMsg("valid",apiForm),getLists()}catch(e){toggleForm(!1,apiForm,submitApiKey),showMsg("invalid",apiForm),console.error("Failed to fetch:",e)}}else toggleForm(!1,apiForm,submitApiKey),showMsg("invalid",apiForm)},toggleForm=(e,t,o)=>{const s=t.querySelectorAll(".form-submit-wrapper, #submit"),r=t.querySelectorAll(".form-input-wrapper, #key");if(e){t.removeEventListener("submit",o);for(let e=0;e<r.length;++e)r[e].classList.remove("invalid");for(let e=0;e<s.length;++e)s[e].classList.add("inactive")}else{for(let e=0;e<s.length;++e)s[e].classList.remove("inactive");t.addEventListener("submit",o)}},apiKeyClientSideValidation=()=>{const e=apiForm.querySelector("#key").value;return 0!==e.length&&-1!==e.search("-us")},showMsg=(e,t)=>{const o=t.querySelectorAll(".form-input-wrapper, #key");for(let t=0;t<o.length;++t)o[t].classList.add(e)},getLists=async()=>{const e=new Headers({"X-CSRFToken":csrfToken}),t=new Request("/getLists",{method:"GET",credentials:"same-origin",headers:e});try{const e=await fetch(t);if(!e.ok)throw new Error(e.statusText);{const t=await e.json();setupListsTable(t.lists)}}catch(e){console.error("Failed to fetch:",e)}};apiForm.addEventListener("submit",submitApiKey);let listeners=[],listId="",listName="",totalCount=0,openRate=0;const analysisTime=.24,secondsToHm=e=>{if(0==e)return"N/A";e=Number(e);const t=Math.floor(e/3600),o=Math.floor(e%3600/60),s=(t>0?t+(0==o?1==t?" hour":" hours":1==t?" hour, ":" hours, "):"")+(o>0?o+(1==o?" minute":" minutes"):"");return s?"~"+s:"<1 minute"},setupListsTable=e=>{let t="<tbody>";for(let o=0;o<e.length;++o){t+="<tr>",t+="<td>"+e[o].name+"</td>",t+="<td class='d-none d-md-table-cell'>"+e[o].stats.member_count.toLocaleString()+"</td>",t+="<td class='d-none d-md-table-cell'>"+secondsToHm(.24*e[o].stats.member_count)+"</td>",e[o].stats.member_count>0?t+="<td class='analyze-link-column'><a class='analyze-link' list-id='"+e[o].id+"' list-name='"+e[o].name+"' total-count='"+(e[o].stats.member_count+e[o].stats.unsubscribe_count+e[o].stats.cleaned_count)+"' open-rate='"+e[o].stats.open_rate+"' href='#'><div class='analyze-link-text'>Analyze</div><svg class='i-chevron-right' viewBox='0 0 32 32' width='16' height='16' fill='none' stroke='currentcolor' stroke-linecap='round' stroke-linejoin='round' stroke-width='3'><path d='M12 30 L24 16 12 2'></path></svg></a></td>":t+="<td></td>",t+="</tr>"}t+="</tbody>",document.querySelector("thead").insertAdjacentHTML("afterend",t);const o=document.querySelectorAll(".analyze-link");for(let e=0;e<o.length;++e){const t=o[e].getAttribute("list-id"),s=o[e].getAttribute("list-name"),r=o[e].getAttribute("total-count"),a=o[e].getAttribute("open-rate"),n=analyzeList(t,s,r,a);o[e].addEventListener("click",n),listeners[e]=n}slideLeft()},analyzeList=(e,t,o,s)=>r=>{r.preventDefault();const a=document.querySelectorAll(".analyze-link");for(let e=0;e<a.length;++e)a[e].removeEventListener("click",listeners[e]);listId=e,listName=t,totalCount=o,openRate=s,slideLeft()},emailForm=document.querySelector(".email-form"),emailClientSideValidation=()=>{const e=emailForm.querySelector("#key").value;return 0!==e.length&&-1!==e.search("@")&&-1!==e.search(".")},submitEmail=async e=>{if(e.preventDefault(),toggleForm(!0,emailForm,submitEmail),emailClientSideValidation()){let e=new FormData(emailForm);e.append("listId",listId),e.append("listName",listName),e.append("totalCount",totalCount),e.append("openRate",openRate);const t=new Headers({"X-CSRFToken":csrfToken}),o=new Request("/submitEmail",{method:"POST",credentials:"same-origin",headers:t,body:e});try{const e=await fetch(o);if(!e.ok)throw new Error(e.statusText);slideLeft()}catch(e){toggleForm(!1,emailForm,submitEmail),showMsg("invalid",emailForm),console.error("Failed to fetch:",e)}}else toggleForm(!1,emailForm,submitEmail),showMsg("invalid",emailForm)};emailForm.addEventListener("submit",submitEmail);