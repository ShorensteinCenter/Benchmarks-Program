const form=document.querySelector(".api-key-form"),inactiveFields=form.querySelectorAll(".api-key-submit-wrapper, #submit");msgFields=form.querySelectorAll(".api-key-input-wrapper, #key"),csrf_token=document.querySelector("meta[name=csrf-token]").content;const submitApiKey=async e=>{if(e.preventDefault(),toggleForm(!0),clientSideValidation()){const e=new Headers({"X-CSRFToken":csrf_token}),t=new FormData(form),s=new Request("/validateAPIKey",{method:"POST",credentials:"same-origin",headers:e,body:t});try{const e=await fetch(s);if(!e.ok)throw new Error(e.statusText);showMsg("valid"),getLists()}catch(e){toggleForm(!1),showMsg("invalid"),console.log("Failed to fetch:",e)}}else toggleForm(!1),showMsg("invalid")},toggleForm=e=>{if(e){form.removeEventListener("submit",submitApiKey);for(let e=0;e<msgFields.length;++e)msgFields[e].classList.remove("invalid");for(let e=0;e<inactiveFields.length;++e)inactiveFields[e].classList.add("inactive")}else{for(let e=0;e<inactiveFields.length;++e)inactiveFields[e].classList.remove("inactive");form.addEventListener("submit",submitApiKey)}},clientSideValidation=()=>{const e=form.querySelector("#key").value;return 0!==e.length&&-1!==e.search("-us")},showMsg=e=>{for(let t=0;t<msgFields.length;++t)msgFields[t].classList.add(e)},getLists=async()=>{const e=new Headers({"X-CSRFToken":csrf_token}),t=new Request("/getLists",{method:"GET",credentials:"same-origin",headers:e});try{const e=await fetch(t);if(!e.ok)throw new Error(e.statusText);{const t=await e.json();setupListsTable(t.lists)}}catch(e){console.log("Failed to fetch:",e)}},slideLeft=e=>{const t=document.querySelectorAll(".container-fluid");for(let s=0;s<t.length;++s)t[s].style.transform="translateX("+e+")"};form.addEventListener("submit",submitApiKey);let listeners=[];const setupListsTable=e=>{let t="<tbody>";for(let s=0;s<e.length;++s){const i=e[s].stats.member_count+e[s].stats.unsubscribe_count+e[s].stats.cleaned_count;t+="<tr>",t+="<td>"+e[s].name+"</td>",t+="<td class='d-none d-sm-table-cell'>"+i.toLocaleString()+"</td>",t+="<td class='d-none d-sm-table-cell'></td>",t+="<td class='analyze-link-column'><a class='analyze-link' list-id='"+e[s].id+"' list-size='"+i+"' href='#'><div class='analyze-link-text'>Analyze</div><svg class='i-chevron-right' viewBox='0 0 32 32' width='16' height='16' fill='none' stroke='currentcolor' stroke-linecap='round' stroke-linejoin='round' stroke-width='3'><path d='M12 30 L24 16 12 2'></path></svg></a></td>",t+="</tr>"}t+="</tbody>",document.querySelector("thead").insertAdjacentHTML("afterend",t);const s=document.querySelectorAll(".analyze-link");for(let e=0;e<s.length;++e){const t=s[e].getAttribute("list-id"),i=s[e].getAttribute("list-size");listener=analyzeList(t,i),s[e].addEventListener("click",listener),listeners[e]=listener}slideLeft("-100vw")},analyzeList=(e,t)=>async s=>{s.preventDefault();const i=document.querySelectorAll(".analyze-link");for(let e=0;e<i.length;++e)i[e].removeEventListener("click",listeners[e]);slideLeft("-200vw");const n=new Headers({"X-CSRFToken":csrf_token}),l=new Request("/analyzeList?id="+e+"&size="+t,{method:"GET",credentials:"same-origin",headers:n});try{const e=await fetch(l);if(!e.ok)throw new Error(e.statusText);console.log("ok")}catch(s){console.log("Failed to fetch:",s)}};