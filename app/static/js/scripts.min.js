const tagField=(e,t)=>{t?(e.classList.remove("invalid"),e.parentElement.classList.remove("invalid"),e.classList.add("valid"),e.parentElement.classList.add("valid")):(e.classList.remove("valid"),e.parentElement.classList.remove("valid"),e.classList.add("invalid"),e.parentElement.classList.add("invalid"))},clientSideValidateField=e=>{const t=e.getAttribute("custom_type"),s=e.value;let n=!0;return n="key"==t?0!==s.length&&-1!==s.indexOf("-us"):"email"==t?0!==s.length&&-1!==s.indexOf("@")&&-1!==s.indexOf("."):0!==s.length,tagField(e,n),n},clientSideValidateForm=e=>{const t=e.querySelectorAll("input");let s=!0;for(let e=0;e<t.length;++e){clientSideValidateField(t[e])||(s=!1)}return s},inputs=document.querySelectorAll(".form-input-wrapper input");for(let e=0;e<inputs.length;++e){inputs[e].addEventListener("keyup",e=>clientSideValidateField(e.currentTarget))}const disable=e=>{if(NodeList.prototype.isPrototypeOf(e))for(let t=0;t<e.length;++t)e[t].classList.add("disabled-elt");else e.classList.add("disabled-elt")},enable=e=>{if(NodeList.prototype.isPrototypeOf(e))for(let t=0;t<e.length;++t)e[t].classList.remove("disabled-elt");else e.classList.remove("disabled-elt")},csrfToken=document.querySelector("meta[name=csrf-token]").content,basicInfoForm=document.querySelector("#basic-info-form"),submitBasicInfo=async e=>{if(e.preventDefault(),basicInfoForm.removeEventListener("submit",submitBasicInfo),disable(basicInfoForm.querySelectorAll("input")),!clientSideValidateForm(basicInfoForm))return enable(basicInfoForm.querySelectorAll("input")),void basicInfoForm.addEventListener("submit",submitBasicInfo);const t=new Headers({"X-CSRFToken":csrfToken}),s=new FormData(basicInfoForm),n=new Request("/validate-basic-info",{method:"POST",credentials:"same-origin",headers:t,body:s});try{const t=await fetch(n);if(t.ok)window.location.href="/info-validated";else{if(400!=t.status)throw new Error(t.statusText);{const e=await t.json();for(const[t,s]of Object.entries(e))tagField(document.querySelector("#"+t));enable(basicInfoForm.querySelectorAll("input")),basicInfoForm.addEventListener("submit",submitBasicInfo)}}}catch(e){console.error(e)}};basicInfoForm&&basicInfoForm.addEventListener("submit",submitBasicInfo);const toggles=document.querySelectorAll("span.switch"),changeActivationStatus=async e=>{const t=e.currentTarget;t.removeEventListener("change",changeActivationStatus),disable(t);const s=t.getAttribute("switch-id"),n=new Headers({"X-CSRFToken":csrfToken}),i=new Request("/activate-user?user="+s,{method:"GET",credentials:"same-origin",headers:n});try{const s=await fetch(i);if(!s.ok)throw new Error(s.statusText);enable(t),t.addEventListener("change",changeActivationStatus)}catch(e){console.error(e)}};if(toggles)for(let e=0;e<toggles.length;++e){toggles[e].addEventListener("change",changeActivationStatus)}const apiKeyForm=document.querySelector("#api-key-form"),submitApiKey=async e=>{e.preventDefault(),apiKeyForm.removeEventListener("submit",submitApiKey);const t=apiKeyForm.querySelectorAll('input:not([type="checkbox"]), .custom-control-label');if(disable(t),!clientSideValidateForm(apiKeyForm))return enable(t),void apiKeyForm.addEventListener("submit",submitApiKey);const s=new Headers({"X-CSRFToken":csrfToken}),n=new FormData(apiKeyForm),i=new Request("/validate-api-key",{method:"POST",credentials:"same-origin",headers:s,body:n});try{const s=await fetch(i);if(s.ok)window.location.href="/select-list";else{if(400!=s.status)throw new Error(s.statusText);{const e=await s.json();for(const[t,s]of Object.entries(e))tagField(document.querySelector("#"+t));enable(t),apiKeyForm.addEventListener("submit",submitApiKey)}}}catch(e){console.error(e)}};apiKeyForm&&apiKeyForm.addEventListener("submit",submitApiKey);const listsTable=document.querySelector(".lists-table");let listeners=[];const analysisTime=.24,secondsToHm=e=>{if(0==e)return"N/A";e=Number(e);const t=Math.floor(e/3600),s=Math.floor(e%3600/60),n=(t>0?t+(0==s?1==t?" hour":" hours":1==t?" hour, ":" hours, "):"")+(s>0?s+(1==s?" minute":" minutes"):"");return n?"~"+n:"<1 minute"},setupListsTable=e=>{let t="<tbody>";for(let s=0;s<e.length;++s){t+="<tr>",t+="<td>"+e[s].name+"</td>",t+="<td class='d-none d-md-table-cell'>"+e[s].stats.member_count.toLocaleString()+"</td>",t+="<td class='d-none d-md-table-cell'>"+secondsToHm(.24*e[s].stats.member_count)+"</td>",e[s].stats.member_count>0?t+="<td class='analyze-link-column'><a class='analyze-link' list-id='"+e[s].id+"' list-name='"+e[s].name+"' total-count='"+(e[s].stats.member_count+e[s].stats.unsubscribe_count+e[s].stats.cleaned_count)+"' open-rate='"+e[s].stats.open_rate+"' href='#'><div class='analyze-link-text'>Analyze</div><svg class='i-chevron-right' viewBox='0 0 32 32' width='16' height='16' fill='none' stroke='currentcolor' stroke-linecap='round' stroke-linejoin='round' stroke-width='3'><path d='M12 30 L24 16 12 2'></path></svg></a></td>":t+="<td></td>",t+="</tr>"}t+="</tbody>",document.querySelector("thead").insertAdjacentHTML("afterend",t);const s=document.querySelectorAll(".analyze-link");for(let e=0;e<s.length;++e){const t=s[e].getAttribute("list-id"),n=s[e].getAttribute("list-name"),i=s[e].getAttribute("total-count"),o=s[e].getAttribute("open-rate"),a=analyzeList(t,n,i,o);s[e].addEventListener("click",a),listeners[e]=a}},analyzeList=(e,t,s,n)=>async i=>{i.preventDefault();const o=document.querySelectorAll(".analyze-link");for(let e=0;e<o.length;++e)o[e].removeEventListener("click",listeners[e]);disable(document.querySelectorAll(".lists-table"));const a=new Headers({"X-CSRFToken":csrfToken,"content-type":"application/json"}),r={list_id:e,list_name:t,total_count:s,open_rate:n},l={method:"POST",credentials:"same-origin",headers:a,body:JSON.stringify(r)},c=new Request("/analyze-list",l);try{if(!(await fetch(c)).ok){enable(document.querySelectorAll(".lists-table"));for(let e=0;e<o.length;++e)o[e].addEventListener("click",listeners[e]);throw new Error(i.statusText)}console.error("ok")}catch(i){console.error(i)}},getListData=async()=>{const e=new Request("/get-list-data",{credentials:"same-origin"});try{const t=await fetch(e);if(!t.ok)throw new Error(t.statusText);{const e=await t.json();setupListsTable(e)}}catch(e){console.error(e)}};listsTable&&getListData();